Parameters:
  stackPrefix:
    Description: will be used a prefix for stack names.
    Type: String
    Default: my
  parameterToMap:
    Type: String
    Default: MyGroup2

Mappings:
  MyMap:
    MyGroup1:
      MyKey: MyVal1
      MyKey2: MyVal21
    MyGroup2:
      MyKey: MyVal2
      MyKey2: MyVal22
  MyMapWithArrarys:
    MyGroup1:
      MyKey: [MyVal1]
      MyKey2: [MyVal21]
    MyGroup2:
      MyKey: [MyVal2]
      MyKey2: [MyVal22]


OrganizationUpdate:
  Type: update-organization
  Skip: true
  Template: ./organization.yml

BucketTemplate:
  Type: update-stacks
  Template: ./bucket.yml
  StackName: !Sub '${stackPrefix}-scenario-export-bucket'
  DefaultOrganizationBindingRegion: eu-west-1
  DefaultOrganizationBinding:
    IncludeMasterAccount: true

PolicyTemplate:
  DependsOn: BucketTemplate
  Type: update-stacks
  Template: ./bucket-policy.yml
  StackName: !Sub '${stackPrefix}-scenario-export-bucket-role'
  StackDescription: !Sub
  - 'something current account "${currentAccount}" also account by name "${accountByName}"'
  - { currentAccount: !GetAtt CurrentAccount.AccountName, accountByName: !GetAtt AccountA.AccountName }
  DefaultOrganizationBindingRegion: eu-west-1
  DefaultOrganizationBinding:
    IncludeMasterAccount: true
  Parameters:
    bucketArn: !CopyValue BucketArn
    bucketArn2: !CopyValue [BucketArn, 102625093955]
    bucketArn3: !CopyValue [BucketArn, 102625093955, 'eu-west-1']
    bucketArn4: !CopyValue [BucketArn, !Ref MasterAccount, 'eu-west-1']
    tagVal: !GetAtt MasterAccount.Tags.Tag
    tagVal2: !GetAtt CurrentAccount.Tags.Tag
    tagVal3: !GetAtt AWSAccount.Tags.Tag
    tagVal4: !Ref AWSAccount
    masterAccountId: !Ref MasterAccount
    numericValue: 123
    someSubExpression: !Sub
    - '--${a}--${b}'
    - {a: !GetAtt MasterAccount.AccountId, b: !Ref AWS::AccountId}
    currentAccount: !Ref CurrentAccount
    paramArray:
      - val1
      - val2
    joinedCopyValue: !Join ['', [!CopyValue [BucketArn, 102625093955], '-postfix']]
    findInMap1: !FindInMap [MyMap, MyGroup1, MyKey]
    findInMap2: !FindInMap [MyMap, !Ref parameterToMap, MyKey]
    md5: !MD5 'input text'
    readFile: !ReadFile ./file.txt
    md5readFile: !MD5
      - !ReadFile ./file.txt
    select: !Select [2, ['one', 'two', 'three']]
    selectFindInMap: !Select [0, !FindInMap [MyMap, MyGroup1, MyKey]]